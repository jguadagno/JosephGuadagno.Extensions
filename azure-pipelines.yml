# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

parameters:
  - name: buildConfig
    displayName: Build Configuration to Use
    default: Debug
    values:
    - Debug
    - Release

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
- name: buildConfiguration
  value: ${{ parameters.buildConfig }}
- group: CodeSigning

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '3.x'
    includePreviewVersions: true

- task: DotNetCoreCLI@2
  displayName: 'Build the Assembly'
  inputs:
    command: 'build'
    projects: 'src/**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'


- task: DotNetCoreCLI@2
  displayName: Package up the Assembly
  inputs:
    command: 'pack'
    packagesToPack: 'src/**/*.csproj'
    nobuild: true
    verbosityPack: 'Normal'

- task: DotNetCoreCLI@2
  displayName: Install NuGetKeyVaultSignTool
  inputs:
    command: 'custom'
    custom: 'tool'
    arguments: 'install --tool-path . NuGetKeyVaultSignTool'

- task: PowerShell@2
  displayName: Running NuGetKeyVaultSign
  inputs:
    targetType: 'inline'
    script: |
      .\NuGetKeyVaultSignTool sign ./src/**/*.nupkg `
      --file-digest "sha256" `
      --timestamp-rfc3161 "http://timestamp.digicert.com" `
      --timestamp-digest "sha256" `
      --azure-key-vault-url "https://personalsecrets.vault.azure.net" `
      --azure-key-vault-client-id "$(azure-key-vault-client-id)" `
      --azure-key-vault-client-secret "$(azure-key-vault-client-secret)" `
      --azure-key-vault-certificate "JosephGuadagno-2020"